plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group
atmospheric_api_tag = project.atmospheric_api_tag

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenLocal()
	maven {
		name "ladysnake"
		url "https://maven.ladysnake.org/releases"
	}
	maven {
		name "mod menu"
		url "https://maven.terraformersmc.com"
	}
	maven {
		name "modrinth"
		url "https://api.modrinth.com/maven"
	}
	maven {
		name "most w tickets mod for modfest"
		url 'https://repo.sleeping.town'
		content {
			includeGroup 'gay.lemmaeof'
			includeGroup 'folk.sisby'
		}
	}
	maven {
		name 'Xander Maven'
		url 'https://maven.isxander.dev/releases'
	}
	maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
		content {
			includeGroup "io.github.cottonmc"
		}
	}
	maven { url 'https://jitpack.io' }
}

fabricApi {
	configureDataGeneration {
		modId = "amarong"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	include modApi("org.ladysnake.cardinal-components-api:cardinal-components-base:${project.cardinal_components_version}")
	include modApi("org.ladysnake.cardinal-components-api:cardinal-components-entity:${project.cardinal_components_version}")
	include modImplementation("maven.modrinth:terrific-tickets:${project.terrifictickets_version}")
	modApi("dev.isxander:yet-another-config-lib:${project.yet_another_config_lib_version}")
	modApi "com.terraformersmc:modmenu:${project.modmenu_version}"

	//include modApi("com.github.ekulxam:AtmosphericAPI:${project.atmospheric_api_tag}")
	include modApi("survivalblock.atmosphere:atmospheric_api:${project.atmospheric_api_tag}")

	modCompileOnly "dev.emi:emi-fabric:${project.emi_version}"
	modRuntimeOnly "dev.emi:emi-fabric:${project.emi_version}"

	//modRuntimeOnly "maven.modrinth:honque:${project.honque_version}"
	//modCompileOnly "maven.modrinth:honque:${project.honque_version}"

	modRuntimeOnly "maven.modrinth:twirl:${project.twirl_version}"
	modCompileOnly "maven.modrinth:twirl:${project.twirl_version}"

	//modRuntimeOnly "maven.modrinth:wowozela:${project.wowozela_version}"
	//modRuntimeOnly "maven.modrinth:beam-be-gone:${project.beam_be_gone_version}"

	//modRuntimeOnly "maven.modrinth:scattered-shards:${project.scattered_shards_version}"
	//modRuntimeOnly "io.github.cottonmc:LibGui:${project.libgui_version}"
	//modRuntimeOnly "me.lucko:fabric-permissions-api:${project.fabric_permissions_version}"
	// modRuntimeOnly "maven.modrinth:crunchy-crunchy-advancements:${project.crunchy_advancements_version}"
	//runtimeOnly "folk.sisby:kaleido-config:${project.kaleido_config_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}